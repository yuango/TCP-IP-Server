**多线程效率高于多进程，但是一个线程影响整个程序(共用同一内存)
**多线程用于程序运行某些部分不能停止，而要求另一部分程序需要暂停等待用户界面输入等工作的情况
**线程函数编译时要带库pthread，gcc xxx.c -lpthread
**man pthread_create
**printf()是把数据发送到缓冲区，只有遇到换行("%d\n")或者刷新缓冲区(fflush(stdout))时才会输出到屏幕
**fflush(stdin)清除输入缓冲区
**在线程中使用信号量可以实现线程同步，这里的信号量区别于进程间的信号量
**使用互斥锁在加锁和解锁期间对全局变量的访问加上了限制，限制只有一个线程可以访问，只有解锁后其他线程才能继续访问。且会继承其他线程在加锁期间对全局变量的改动结果。解锁必须是加锁的线程，没解锁前，其他线程都处于等待状态
**man 中没有pthread_mutex_系列函数库，但是编译可以正常通过说明编译器里有这个库。可以联网apt-get install manpages-posix-dev获取
**互斥锁对于一个程序中所有线程来说是共享的，即共同影响的
**一般在函数中给出退出接口，q
